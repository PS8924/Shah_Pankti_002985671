/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.carAllDataList;
import model.carfleet;

/**
 *
 * @author Shah's
 */
public class SearchData extends javax.swing.JPanel {

    /**
     * Creates new form SearchData
     */
    carAllDataList alldata;
    int selectedRowIndex;
    public SearchData(carAllDataList alldata) {
        initComponents();
        
        this.alldata = alldata;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSearchTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSearchBarData = new javax.swing.JTable();
        btndsply = new javax.swing.JButton();
        btnMainCert = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSCarManu = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSCarManYear = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSSerialNum = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtSModelNum = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSCityAv = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btnFirstAvCar = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 153));

        lblSearchTitle.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        lblSearchTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblSearchTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSearchTitle.setText("Search Car Details");

        tblSearchBarData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Name", "Manufacturer Name", "Manufacturing Year", "Occupancy", "Serial Number", "Model Number", "Uber Availability", "City Availability", "Maintainance Certi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblSearchBarData);

        btndsply.setText("Display All Records");
        btndsply.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btndsply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndsplyActionPerformed(evt);
            }
        });

        btnMainCert.setText("Maintenance Ceritificate Expired");
        btnMainCert.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMainCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMainCertActionPerformed(evt);
            }
        });

        jLabel2.setText("Car Manufacturer:");

        txtSCarManu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSCarManuActionPerformed(evt);
            }
        });

        jLabel3.setText("Manufacturing Year:");

        jLabel4.setText("Serial Number:");

        jLabel5.setText("Model Number:");

        jLabel6.setText("City Availability:");

        jButton3.setText("Find");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Find");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Find");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Find");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Find");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        btnFirstAvCar.setText("First Available Car");
        btnFirstAvCar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnFirstAvCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvCarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSearchTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtSCarManu, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(txtSCarManYear)
                            .addComponent(txtSSerialNum)
                            .addComponent(txtSModelNum)
                            .addComponent(txtSCityAv))
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3)
                            .addComponent(jButton4)
                            .addComponent(jButton5)
                            .addComponent(jButton6)
                            .addComponent(jButton7))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(btnMainCert)
                        .addGap(18, 18, 18)
                        .addComponent(btndsply)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnFirstAvCar)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnMainCert, btndsply});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblSearchTitle)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndsply)
                    .addComponent(btnMainCert)
                    .addComponent(btnFirstAvCar))
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSCarManu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSCarManYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(txtSModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtSCityAv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton7)))
                .addContainerGap(278, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSCarManuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSCarManuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSCarManuActionPerformed

    
    private void btndsplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndsplyActionPerformed
        // TODO add your handling code here:
        populateTable();
    }//GEN-LAST:event_btndsplyActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        String serialnumber = txtSSerialNum.getText();
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        model.setRowCount(0);
        int count =0;
        for(carfleet cf : alldata.getAlldata()){
            if(Integer.toString(cf.getSerialNum()).equals(serialnumber)){
            count++;
            Object[] row = new Object[9];
            row[0] = cf;
            row[1] = cf.getCarManufacturer();
            row[2] = cf.getManuYear();
            row[3] = cf.getTotalSeat();
            row[4] = cf.getSerialNum();
            row[5] = cf.getModelNum();
            if(cf.getUber() == "false"){
               row[6] = "No";
            }else{
                row[6] = "Yes";
            }
            row[7] = cf.getCarCity();
            if(cf.getCarManDate() == "false"){
               row[8] = "No";
            }else{
                row[8] = "Yes";
            }
            model.addRow(row);
        } else{
             JOptionPane.showMessageDialog(this, "Records not found!!");
        }
        }   
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String car_Manufacturer = txtSCarManu.getText();
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        model.setRowCount(0);
        int count =0;
        for(carfleet cf : alldata.getAlldata()){
            if(cf.getCarManufacturer().equals(car_Manufacturer)){
            count++;
            Object[] row = new Object[9];
            row[0] = cf;
            row[1] = cf.getCarManufacturer();
            row[2] = cf.getManuYear();
            row[3] = cf.getTotalSeat();
            row[4] = cf.getSerialNum();
            row[5] = cf.getModelNum();
            if(cf.getUber() == "false"){
               row[6] = "No";
            }else{
                row[6] = "Yes";
            }
            row[7] = cf.getCarCity();
            if(cf.getCarManDate() == "false"){
               row[8] = "No";
            }else{
                row[8] = "Yes";
            }
            model.addRow(row);
        }
        } 
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String manufacture_year = txtSCarManYear.getText();
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        model.setRowCount(0);
        int count =0;
        for(carfleet cf : alldata.getAlldata()){
            if(cf.getManuYear().equals(manufacture_year)){
            count++;
            Object[] row = new Object[9];
            row[0] = cf;
            row[1] = cf.getCarManufacturer();
            row[2] = cf.getManuYear();
            row[3] = cf.getTotalSeat();
            row[4] = cf.getSerialNum();
            row[5] = cf.getModelNum();
            if(cf.getUber() == "false"){
               row[6] = "No";
            }else{
                row[6] = "Yes";
            }
            row[7] = cf.getCarCity();
            if(cf.getCarManDate() == "false"){
               row[8] = "No";
            }else{
                row[8] = "Yes";
            }
            model.addRow(row);
        }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String model_number = txtSModelNum.getText();
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        model.setRowCount(0);
        int count =0;
        for(carfleet cf : alldata.getAlldata()){
            if(cf.getModelNum().equals(model_number)){
            count++;
            Object[] row = new Object[9];
            row[0] = cf;
            row[1] = cf.getCarManufacturer();
            row[2] = cf.getManuYear();
            row[3] = cf.getTotalSeat();
            row[4] = cf.getSerialNum();
            row[5] = cf.getModelNum();
            if(cf.getUber() == "false"){
               row[6] = "No";
            }else{
                row[6] = "Yes";
            }
            row[7] = cf.getCarCity();
            if(cf.getCarManDate() == "false"){
               row[8] = "No";
            }else{
                row[8] = "Yes";
            }
            model.addRow(row);
        } else{
             JOptionPane.showMessageDialog(this, "Records not found!!");
        }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String city = txtSCityAv.getText();
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        model.setRowCount(0);
        int count =0;
        for(carfleet cf : alldata.getAlldata()){
            if(cf.getCarCity().equals(city)){
            count++;
            Object[] row = new Object[9];
            row[0] = cf;
            row[1] = cf.getCarManufacturer();
            row[2] = cf.getManuYear();
            row[3] = cf.getTotalSeat();
            row[4] = cf.getSerialNum();
            row[5] = cf.getModelNum();
            if(cf.getUber() == "false"){
               row[6] = "No";
            }else{
                row[6] = "Yes";
            }
            row[7] = cf.getCarCity();
            if(cf.getCarManDate() == "false"){
               row[8] = "No";
            }else{
                row[8] = "Yes";
            }
            model.addRow(row);
        } else{
             JOptionPane.showMessageDialog(this, "Records not found!!");
        }
        } 
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btnMainCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMainCertActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        model.setRowCount(0);
        int count =0;
        for(carfleet cf : alldata.getAlldata()){
            String i;
            if(cf.getCarManDate().toString() == "false"){
                i = "No";
            }else{
                i = "Yes";
            }
            System.out.println(cf.getCarManDate().toString());
                if(i.equals("No")){
                count++;
                Object[] row = new Object[9];
                row[0] = cf;
                row[1] = cf.getCarManufacturer();
                row[2] = cf.getManuYear();
                row[3] = cf.getTotalSeat();
                row[4] = cf.getSerialNum();
                row[5] = cf.getModelNum();
                if(cf.getUber() == "false"){
                   row[6] = "No";
                }else{
                    row[6] = "Yes";
                }
                row[7] = cf.getCarCity();
                if(cf.getCarManDate() == "false"){
                   row[8] = "No";
                }else{
                    row[8] = "Yes";
                }
                model.addRow(row);
            }
        } 
    }//GEN-LAST:event_btnMainCertActionPerformed

    private void btnFirstAvCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvCarActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        model.setRowCount(0);
        int count =0;
        
        int numofavailablecar=0, numofcarnotavailable=0;
        for(carfleet cf : alldata.getAlldata()){
            System.out.println(cf.getUber());
            if(cf.getUber().equals("true")){
            count++;
                if(count==1){
                    Object[] row = new Object[9];
                    row[0] = cf;
                    row[1] = cf.getCarManufacturer();
                    row[2] = cf.getManuYear();
                    row[3] = cf.getTotalSeat();
                    row[4] = cf.getSerialNum();
                    row[5] = cf.getModelNum();
                    if(cf.getUber() == "false"){
                       row[6] = "No";
                    }else{
                        row[6] = "Yes";
                    }
                    row[7] = cf.getCarCity();
                    if(cf.getCarManDate() == "false"){
                       row[8] = "No";
                    }else{
                        row[8] = "Yes";
                    }
                    model.addRow(row);
                }
            }   
        }
    }//GEN-LAST:event_btnFirstAvCarActionPerformed
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblSearchBarData.getModel();
        
        model.setRowCount(0);
        
        for(carfleet cf : alldata.getAlldata()){
            Object[] row = new Object[9];
            row[0] = cf;
            row[1] = cf.getCarManufacturer();
            row[2] = cf.getManuYear();
            row[3] = cf.getTotalSeat();
            row[4] = cf.getSerialNum();
            row[5] = cf.getModelNum();
            if(cf.getUber() == "false"){
               row[6] = "No";
            }else{
                row[6] = "Yes";
            }
            row[7] = cf.getCarCity();
            if(cf.getCarManDate() == "false"){
               row[8] = "No";
            }else{
                row[8] = "Yes";
            }
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirstAvCar;
    private javax.swing.JButton btnMainCert;
    private javax.swing.JButton btndsply;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearchTitle;
    private javax.swing.JTable tblSearchBarData;
    private javax.swing.JTextField txtSCarManYear;
    private javax.swing.JTextField txtSCarManu;
    private javax.swing.JTextField txtSCityAv;
    private javax.swing.JTextField txtSModelNum;
    private javax.swing.JTextField txtSSerialNum;
    // End of variables declaration//GEN-END:variables
}
