/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.CardLayout;
import java.time.LocalDateTime;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.carAllDataList;
import model.carfleet;

/**
 *
 * @author Shah's
 */
public class ViewCarData extends javax.swing.JPanel {

    /**
     * Creates new form ViewCarData
     */
    carAllDataList alldata;
    int selectedRowIndex;
    public ViewCarData(carAllDataList alldata) {
        initComponents();
        this.alldata = alldata;
        
        populateTable();
        txtVfleet.setText(String.valueOf(LocalDateTime.now()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblViewTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewData = new javax.swing.JTable();
        btnViewData = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblVCarName = new javax.swing.JLabel();
        txtVCarName = new javax.swing.JTextField();
        lblVManuName = new javax.swing.JLabel();
        jVComboCompany = new javax.swing.JComboBox<>();
        lblVManuYear = new javax.swing.JLabel();
        txtVYear = new com.toedter.calendar.JYearChooser();
        lblVSeatNum = new javax.swing.JLabel();
        jVComboSeat = new javax.swing.JComboBox<>();
        lblVSerialNum = new javax.swing.JLabel();
        txtVSerialNum = new javax.swing.JTextField();
        lblVModelNum = new javax.swing.JLabel();
        txtVModel = new javax.swing.JTextField();
        lblVUber = new javax.swing.JLabel();
        cbVUber = new javax.swing.JCheckBox();
        lblVCity = new javax.swing.JLabel();
        jVComboCity = new javax.swing.JComboBox<>();
        lblVMaintainance = new javax.swing.JLabel();
        cbVMaintainance = new javax.swing.JCheckBox();
        btnUpdateBtn = new javax.swing.JButton();
        btnUsave = new javax.swing.JButton();
        lblLastFleet = new javax.swing.JLabel();
        txtVfleet = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 153, 153));

        lblViewTitle.setFont(new java.awt.Font("Tahoma", 1, 27)); // NOI18N
        lblViewTitle.setForeground(new java.awt.Color(255, 255, 255));
        lblViewTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblViewTitle.setText("View Car Details");

        tblViewData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Car Name", "Manufacturer Name", "Manufacturing Year", "Occupancy", "Serial Number", "Model Number", "Uber Availability", "City Availability", "Maintainance Certi"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewData);

        btnViewData.setText("View Data");
        btnViewData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDataActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblVCarName.setText("Car Name:");

        txtVCarName.setEditable(false);
        txtVCarName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVCarNameKeyPressed(evt);
            }
        });

        lblVManuName.setText("Manufacturer Name:");

        jVComboCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Please Select--", "Toyota", "BMW", "Audi", "Honda" }));
        jVComboCompany.setEnabled(false);

        lblVManuYear.setText("Manufacturing Year:");

        txtVYear.setEnabled(false);
        txtVYear.setMaximum(2021);
        txtVYear.setMinimum(1980);

        lblVSeatNum.setText("Total Car Seat:");

        jVComboSeat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Please Select--", "3", "4", "5", "6", "7", "8" }));
        jVComboSeat.setEnabled(false);

        lblVSerialNum.setText("Serial Number:");

        txtVSerialNum.setEditable(false);
        txtVSerialNum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVSerialNumKeyPressed(evt);
            }
        });

        lblVModelNum.setText("Model Number:");

        txtVModel.setEditable(false);
        txtVModel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVModelKeyPressed(evt);
            }
        });

        lblVUber.setText("Uber Availability:");

        cbVUber.setText("Yes");
        cbVUber.setEnabled(false);

        lblVCity.setText("City Availability:");

        jVComboCity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--Please Select--", "Boston", "Texas", "Arlington", "Somerville", "Noorwood", "New York", "Philadelphia", "New Jersy", "Bensalem" }));
        jVComboCity.setEnabled(false);

        lblVMaintainance.setText("Maintainance Expiary Date:");

        cbVMaintainance.setText("Yes");
        cbVMaintainance.setEnabled(false);

        btnUpdateBtn.setText("Update");
        btnUpdateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateBtnActionPerformed(evt);
            }
        });

        btnUsave.setText("Save");
        btnUsave.setEnabled(false);
        btnUsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsaveActionPerformed(evt);
            }
        });

        lblLastFleet.setText("Fleet Last Updated:");

        txtVfleet.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblViewTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1038, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblLastFleet)
                .addGap(18, 18, 18)
                .addComponent(txtVfleet, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnViewData)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdateBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete))
            .addGroup(layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblVUber, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(cbVUber))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblVModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(txtVModel))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblVSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(txtVSerialNum))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblVSeatNum, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jVComboSeat, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblVCarName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVManuName, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblVManuYear, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtVCarName, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                                    .addComponent(txtVYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jVComboCompany, 0, 249, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVCity, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblVMaintainance, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbVMaintainance)
                            .addComponent(jVComboCity, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnUsave)
                        .addGap(163, 163, 163)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnUpdateBtn, btnUsave, btnViewData});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblViewTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnViewData)
                    .addComponent(btnUpdateBtn)
                    .addComponent(lblLastFleet)
                    .addComponent(txtVfleet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVCarName)
                    .addComponent(txtVCarName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVManuName)
                    .addComponent(jVComboCompany, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblVManuYear)
                    .addComponent(txtVYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVSeatNum)
                    .addComponent(jVComboSeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVSerialNum)
                    .addComponent(txtVSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVModelNum)
                    .addComponent(txtVModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVUber)
                    .addComponent(cbVUber))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVCity)
                    .addComponent(jVComboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblVMaintainance)
                    .addComponent(cbVMaintainance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUsave)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        btnUsave.setEnabled(false);
        int selectedRowIndex = tblViewData.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please Select a row to delete!!");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblViewData.getModel();
        carfleet selectedCars = (carfleet) model.getValueAt(selectedRowIndex, 0);
        
        alldata.deleteCarData(selectedCars);
        JOptionPane.showMessageDialog(this, "Data Deleted!!");
       
        //clear the form
        txtVCarName.setText("");
        jVComboCompany.setSelectedItem("--Please Select--");
        jVComboSeat.setSelectedItem("--Please Select--");
        txtVSerialNum.setText("");
        txtVModel.setText("");
        cbVUber.setSelected(false);
        jVComboCity.setSelectedItem("--Please Select--");
        cbVMaintainance.setSelected(false);
        txtVYear.setYear(2021);
        populateTable();
        txtVfleet.setText(String.valueOf(LocalDateTime.now()));
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtVCarNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVCarNameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVCarNameKeyPressed

    private void txtVSerialNumKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVSerialNumKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVSerialNumKeyPressed

    private void txtVModelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVModelKeyPressed

    }//GEN-LAST:event_txtVModelKeyPressed

    private void btnViewDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDataActionPerformed
        // TODO add your handling code here:
        btnUsave.setEnabled(false);
        selectedRowIndex = tblViewData.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please Select a row to View!!");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblViewData.getModel();
        carfleet selectedCars = (carfleet) model.getValueAt(selectedRowIndex, 0);
        
        //System.out.println(selectedCars.getUber());
        txtVCarName.setText(String.valueOf(selectedCars.getCarName()));
        jVComboCompany.setSelectedItem(selectedCars.getCarManufacturer());
        txtVSerialNum.setText(String.valueOf(selectedCars.getSerialNum()));
        jVComboSeat.setSelectedItem(selectedCars.getTotalSeat());
        txtVModel.setText(String.valueOf(selectedCars.getModelNum()));
        jVComboCity.setSelectedItem(selectedCars.getCarCity());
        txtVYear.setYear(Integer.parseInt(selectedCars.getManuYear()));
        if(selectedCars.getUber() == "false"){
            cbVUber.setSelected(false);
        }else{
            cbVUber.setSelected(true);
        }
        if(selectedCars.getCarManDate()== "false"){
            cbVMaintainance.setSelected(false);
        }else{
            cbVMaintainance.setSelected(true);
        }
        txtVfleet.setText(String.valueOf(LocalDateTime.now()));
    }//GEN-LAST:event_btnViewDataActionPerformed

    private void btnUpdateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateBtnActionPerformed
        // TODO add your handling code here:
        selectedRowIndex = tblViewData.getSelectedRow();
        if(selectedRowIndex<0){
            JOptionPane.showMessageDialog(this, "Please Select a row to Update!!");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblViewData.getModel();
        carfleet selectedCars = (carfleet) model.getValueAt(selectedRowIndex, 0);
        
        txtVCarName.setEditable(true);
        jVComboCompany.setEnabled(true);
        txtVYear.setEnabled(true);
        txtVSerialNum.setEditable(true);
        jVComboSeat.setEnabled(true);
        txtVModel.setEditable(true);
        jVComboCity.setEnabled(true);
        cbVUber.setEnabled(true);
        cbVMaintainance.setEnabled(true);
        btnUsave.setEnabled(true);
        
        //System.out.println(selectedCars.getUber());
        txtVCarName.setText(String.valueOf(selectedCars.getCarName()));
        jVComboCompany.setSelectedItem(selectedCars.getCarManufacturer());
        txtVSerialNum.setText(String.valueOf(selectedCars.getSerialNum()));
        jVComboSeat.setSelectedItem(selectedCars.getTotalSeat());
        txtVModel.setText(String.valueOf(selectedCars.getModelNum()));
        jVComboCity.setSelectedItem(selectedCars.getCarCity());
        if(selectedCars.getUber() == "false"){
            cbVUber.setSelected(false);
        }else{
            cbVUber.setSelected(true);
        }
        
        if(selectedCars.getCarManDate()== "false"){
            cbVMaintainance.setSelected(false);
        }else{
            cbVMaintainance.setSelected(true);
        }
        //txtVfleet.setText(String.valueOf(LocalDateTime.now()));
    }//GEN-LAST:event_btnUpdateBtnActionPerformed

    private void btnUsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsaveActionPerformed
        // TODO add your handling code here:
        String carname = txtVCarName.getText();
        String manufaturing_company = jVComboCompany.getSelectedItem().toString();
        String carseat = jVComboSeat.getSelectedItem().toString();
        String serial_num = txtVSerialNum.getText();
        String model_num = txtVModel.getText();
        Boolean uber_check = cbVUber.isSelected();
        String citycombo = jVComboCity.getSelectedItem().toString();
        Boolean maintainance_check = cbVMaintainance.isSelected();
        int year = txtVYear.getYear();  //Get Year
            
        System.out.println(String.valueOf(year));

        //regex pattern for a valid car name
        String carname_pattern = "^[a-zA-Z]{0,30}+";
        Pattern exp = Pattern.compile(carname_pattern);

        //regex pattern for a valid serial number
        String serialnum_pattern = "^[0-9]{6}$+";
        Pattern exp1 = Pattern.compile(serialnum_pattern);

        //regex pattern for a valid model number
        String modelnum_pattern = "^[a-zA-Z0-9]+";
        Pattern exp2 = Pattern.compile(modelnum_pattern);
          
        if(carname.isEmpty() || txtVSerialNum.getText().isEmpty() || model_num.isEmpty()){
            JOptionPane.showMessageDialog(this,"All Fields are required!");
        }else{ 
            if(manufaturing_company == "--Please Select--" || carseat == "--Please Select--" ||citycombo == "--Please Select--"){
                JOptionPane.showMessageDialog(this,"Please select valid value! Please Select is not a valid value!!");
            }else{
                Matcher match = exp.matcher(carname);
                if(!match.matches()){
                   JOptionPane.showMessageDialog(this,"Name is Incorrect!!");
                }else{
                    Matcher match1 = exp1.matcher(txtVSerialNum.getText());
                    if(!match1.matches()){
                        JOptionPane.showMessageDialog(this,"Serial Number is Incorrect!!");
                    }else{
                        Matcher match2 = exp2.matcher(model_num);
                        if(!match2.matches()){
                            JOptionPane.showMessageDialog(this,"Model Number is Incorrect!!");
                        }else{
                            DefaultTableModel model= (DefaultTableModel) tblViewData.getModel();
                            if(selectedRowIndex>=0){
                                model.setValueAt(txtVCarName.getText(),selectedRowIndex,0);
                                model.setValueAt(jVComboCompany.getSelectedItem().toString(), selectedRowIndex,1);
                                model.setValueAt(String.valueOf(txtVYear.getYear()), selectedRowIndex,2);
                                model.setValueAt(jVComboSeat.getSelectedItem().toString(), selectedRowIndex,3);
                                model.setValueAt(txtVSerialNum.getText(), selectedRowIndex,4);
                                model.setValueAt(txtVModel.getText(), selectedRowIndex,5);
                                if(cbVUber.isSelected() == false){
                                    model.setValueAt("No", selectedRowIndex,6);
                                }else{
                                    model.setValueAt("Yes", selectedRowIndex,6);
                                }
                                model.setValueAt(jVComboCity.getSelectedItem().toString(), selectedRowIndex,7);
                                if(cbVMaintainance.isSelected()== false){
                                    model.setValueAt("No", selectedRowIndex,8);
                                }else{
                                   model.setValueAt("Yes", selectedRowIndex,8);
                                }
                                txtVfleet.setText(String.valueOf(LocalDateTime.now()));
                            }else{
                                JOptionPane.showMessageDialog(null,"Error");
                            }
//                            carfleet anc = alldata.addNewCarData();
//                            anc.setCarName(carname);
//                            anc.setCarManufacturer(manufaturing_company);
//                            anc.setManuYear(String.valueOf(year));
//                            anc.setTotalSeat(carseat);
//                            //anc.setSerialNum(Integer.parseInt(serial_num));
//                            anc.setModelNum(model_num);
//                            anc.setCarCity(citycombo);
//                            JOptionPane.showMessageDialog(this,"Success!!");
//                            //clear the form after submitting data
//                            txtVCarName.setText("");
//                            jVComboCompany.setSelectedItem("--Please Select--");
//                            jVComboSeat.setSelectedItem("--Please Select--");
//                            txtVSerialNum.setText("");
//                            txtVModel.setText("");
//                            cbVUber.setSelected(false);
//                            jVComboCity.setSelectedItem("--Please Select--");
//                            cbVMaintainance.setSelected(false);
//                            txtVYear.setYear(2021);
//                            try{
//                               anc.setSerialNum(Integer.parseInt(serial_num));
//                            }catch(NumberFormatException e){// handle your exception
//                                e.printStackTrace();
//                            }
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_btnUsaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdateBtn;
    private javax.swing.JButton btnUsave;
    private javax.swing.JButton btnViewData;
    private javax.swing.JCheckBox cbVMaintainance;
    private javax.swing.JCheckBox cbVUber;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jVComboCity;
    private javax.swing.JComboBox<String> jVComboCompany;
    private javax.swing.JComboBox<String> jVComboSeat;
    private javax.swing.JLabel lblLastFleet;
    private javax.swing.JLabel lblVCarName;
    private javax.swing.JLabel lblVCity;
    private javax.swing.JLabel lblVMaintainance;
    private javax.swing.JLabel lblVManuName;
    private javax.swing.JLabel lblVManuYear;
    private javax.swing.JLabel lblVModelNum;
    private javax.swing.JLabel lblVSeatNum;
    private javax.swing.JLabel lblVSerialNum;
    private javax.swing.JLabel lblVUber;
    private javax.swing.JLabel lblViewTitle;
    private javax.swing.JTable tblViewData;
    private javax.swing.JTextField txtVCarName;
    private javax.swing.JTextField txtVModel;
    private javax.swing.JTextField txtVSerialNum;
    private com.toedter.calendar.JYearChooser txtVYear;
    private javax.swing.JTextField txtVfleet;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblViewData.getModel();
        
        model.setRowCount(0);
        
        for(carfleet cf : alldata.getAlldata()){
            Object[] row = new Object[9];
            row[0] = cf;
            row[1] = cf.getCarManufacturer();
            row[2] = cf.getManuYear();
            row[3] = cf.getTotalSeat();
            row[4] = cf.getSerialNum();
            row[5] = cf.getModelNum();
            if(cf.getUber() == "false"){
               row[6] = "No";
            }else{
                row[6] = "Yes";
            }
            row[7] = cf.getCarCity();
            if(cf.getCarManDate() == "false"){
               row[8] = "No";
            }else{
                row[8] = "Yes";
            }
            model.addRow(row);
        }
    }
}
